---

- name: install | Check java binary
  command: "which java"
  changed_when: False
  failed_when: False
  register: java_path

- name: install | Fail if java is not installed
  fail:
    msg="Java is not installed or not in path"
  when: java_path.rc != 0

# init.d will break if user has no shell :(
# Todo: not use the offical bin/nexus
- name: install | Create nexus user
  user: 
     name="{{ nexus_user }}"
     home="{{ nexus_home }}"
     shell="/bin/bash"
     append="true"
     comment="nexus user"

- name: install | Create temporary directory
  file:
    path="{{ nexus_dir_temp }}"
    state=directory
  
- name: install | Download nexus tar.gz archive
  get_url: 
     url="{{ nexus_download_URL }}"
     dest="{{ nexus_dir_temp }}/{{ nexus_archive }}"
  register: nexus_download

- name: install | Resolve nexus_dir name from tar archive
  shell: 
    tar tf {{nexus_dir_temp}}/{{nexus_archive}} | head -1
  changed_when: False
  register: tar_dir_name

- name: install | Unarchive nexus.tar.gz
  unarchive: 
     copy=no
     src="{{ nexus_dir_temp }}/{{ nexus_archive }}"
     dest="{{ nexus_dir_base }}/"
     creates="{{ nexus_dir_base }}/{{ tar_dir_name.stdout }}/bin"
  sudo_user: "{{ nexus_user }}"
  notify: restart nexus
  register: nexus_unarchive
  when: nexus_download | changed

- name: install | Change sonatype-work nexus ownership (and create)
  file:
    path={{ nexus_dir_base }}/sonatype-work/
    owner={{ nexus_user }}
    group={{ nexus_group }}
    state=directory
    recurse=yes
  when: nexus_download | changed

- name: install | update sym link nexus 
  file: 
     src="{{ nexus_dir_base }}/{{ tar_dir_name.stdout }}"
     dest="{{ nexus_dir_base }}/{{ nexus_service_name }}"
     owner="{{ nexus_user }}"
     group="{{ nexus_group }}"
     state=link
  when: nexus_download | changed

- name: install | Install boot script
  template:
    src=nexus_init.d.j2 
    dest="/etc/init.d/{{ nexus_service_name }}"
    owner=root 
    group=root 
    mode=0755
  notify: restart nexus

- name: install | Start/Restart nexus to create sonatype-work
  service:
     name="{{ nexus_service_name }}"
     state=restarted
  when: nexus_unarchive | changed





