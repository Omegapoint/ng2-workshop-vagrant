---
- name: Configure a continuous integration server
  hosts: all
  sudo: True
  vars_files:
    - vars/main.yml
  roles:
        - { role: ansible-java8-oracle }
        - { role: geerlingguy.nodejs}
        - { role: geerlingguy.jenkins, jenkins_plugins: [scm-api, git-client, git, nodejs, build-pipeline-plugin, jquery, promoted-builds, parameterized-trigger, copyartifact, job-dsl, delivery-pipeline-plugin] }
  tasks:
        - name: set java 8 default
          shell: update-java-alternatives -s java-8-oracle

        - name: add jenkins repo
          apt_repository: >
                           repo='deb http://pkg.jenkins-ci.org/debian binary/'
                           state=present
                           update_cache=yes

        - name: add key for jenkins repo
          apt_key: >
                    url=http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key
                    state=present

        - name: install basic packages
          apt: pkg={{item}} state=installed
          with_items:
          - apache2
          - maven
          - jenkins
          - git
          - unzip
          - dos2unix       
          - ruby-dev
          - ansible

        - name: run dos2unix on shared files
          command: /usr/bin/find /vagrant -type f -print0 -exec /usr/bin/dos2unix {} \;

        - name: install phantomjs
          apt: pkg=libfontconfig state=present

        - name: create keys
          user: name=jenkins generate_ssh_key=yes ssh_key_type=rsa

        - name: add git "server" user
          user: name=git

# normally we would use lookup, but there seems to be a bug
        - name: read public keys
          shell: cat /var/lib/jenkins/.ssh/id_rsa.pub
          register: publickey

        - name: set authorized keys
          authorized_key: user=git key="{{publickey.stdout}}" manage_dir=yes

        - name: git conf
          sudo: yes
          sudo_user: git
          shell: |
                 git config --global user.name "vagrant"
                 git config --global user.email "vagrant@omegapoint.se"

        - name: clone git projects frontend
          sudo: yes
          sudo_user: git
          git: repo=https://github.com/Omegapoint/ng2-workshop.git bare=yes dest=/home/git/ng2-workshop.git

        - name: ensure jenkins knows git server
          lineinfile: >
                  dest=/var/lib/jenkins/.ssh/known_hosts
                  create=yes
                  state=present
                  line="{{ lookup('pipe', 'ssh-keyscan -t rsa 192.168.33.10') }}"
                  regexp="^192\\.168\\.33\\.10"

        - name: ensure .m2 directory exists
          file: path=/var/lib/jenkins/.m2 state=directory owner=jenkins group=jenkins
        - name: set m2 settings
          copy: src=../settings.xml dest=/var/lib/jenkins/.m2/settings.xml owner=jenkins group=jenkins

        - name: set jenkins as owner of known_hosts
          file: path=/var/lib/jenkins/.ssh/known_hosts owner=jenkins group=jenkins

        - name: set environment variables
          copy: src=../environment dest=/etc/environment

        - name: fetch public jenkins key and make it available for the test and prod machines
          fetch: src=/var/lib/jenkins/.ssh/id_rsa.pub dest=../jenkins_keys/id_rsa.pub flat=yes 